import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;

public class Server {
    private ServerSocket serverSocket; //listens to connections

    public Server(ServerSocket serverSocket) {   //sets up server socket with a constructor
        this.serverSocket = serverSocket;
    }

    public void startServer() { //starts and keeps the server running
        try {

            while (!serverSocket.isClosed()) {  // keeps the server running constantly until closed
                Socket socket = serverSocket.accept(); // waiting for client to connect, returns socket when connected
                System.out.println("A new client has connected");
                ClientHandler clientHandler = new ClientHandler(socket);  // each object in this class communicates with client over socket / runs runnable

                Thread thread = new Thread(clientHandler); // threads allow for simultaneous running with clientHandler being the task executed
                thread.start();

            }
        }catch (IOException e) {

        }
    }

    public void closeServerSocket() {  // shuts down server socket in the event of an error
        try{
            if (serverSocket != null) {
                serverSocket.close();
            }
        }catch (IOException e) {
            e.printStackTrace();
        }
    }
    public static void main(String[] args) throws IOException {
        ServerSocket serverSocket = new ServerSocket(1234); // listening for clients connecting with this port
        Server server = new Server (serverSocket);  //
        server.startServer();
    }
}
